# Main Nginx configuration file

# Set the worker processes based on the number of CPU cores
worker_processes auto;

# Set up error log and PID file
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

# Define worker connections
events {
    worker_connections 1024;
}

# HTTP block to configure your HTTP server settings
http {
    # Include necessary files like MIME types and logging format
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Configure log format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    # Set up file upload limits and timeouts
    client_max_body_size 100M;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Include virtual host configurations
    include /etc/nginx/conf.d/*.conf;

    # Server block for HTTP traffic (redirecting to HTTPS)
    server {
        listen 80;
        server_name dev.api.fakecollegefootball.com;

        # Certbot's ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all HTTP traffic to HTTPS after Certbot validation
        location / {
            return 301 https://$host:1314$request_uri;
        }
    }

    # Server block for HTTPS traffic
    server {
        listen 1314 ssl;
        server_name dev.api.fakecollegefootball.com;

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/dev.api.fakecollegefootball.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/dev.api.fakecollegefootball.com/privkey.pem;

        # Proxy requests to the Spring Boot application
        location / {
            proxy_pass http://localhost:1313;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}